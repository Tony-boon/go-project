name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build
        run: |
          export CGO_ENABLED=0
          export GOOS=linux
          export GOARCH=amd64
          go build -o main ./main.go
          tar czf main.tar.gz main

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: main.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: main

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y expect

      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

          # 测试与服务器的连接并部署应用
          expect -c "
            spawn ssh $USERNAME@$SERVER_IP \"echo 'Connection successful'\"
            expect \"password:\"
            send \"$SERVER_PASSWORD\r\"
            interact
          "

          # 上传文件到服务器
          expect -c "
            log_user 1
            spawn scp main.tar.gz $USERNAME@$SERVER_IP:/tmp
            expect \"password:\"
            send \"$SERVER_PASSWORD\r\"
            expect eof
          "

          # 解压并查看上传的文件
          expect -c "
            spawn ssh $USERNAME@$SERVER_IP
            expect \"password:\"
            send \"$SERVER_PASSWORD\r\"
            expect \"$ \"  # 等待提示符出现
            send \"cd /home/\n\"
            send \"if [ -f main.bak ]; then rm main.bak; fi\n\"
            send \"if [ -f main ]; then mv main main.bak; fi\n\"
            send \"tar xzf /tmp/main.tar.gz -C /home/\n\"
            send \"ls -l /home/ # Check if the file is there\n\"
            expect \"$ \"  # 再次等待提示符，以检查命令执行完成
            send \"if [ ! -f /home/main ]; then echo 'Error: main not found after extraction'; fi\n\"
            send \"chmod +x /home/main\n\"
            send \"./main\n\"
            expect eof
          "